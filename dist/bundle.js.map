{"version":3,"file":"bundle.js","mappings":";;;;;;;;;AAAA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA,wBAAwB,OAAO;AAC/B;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,iDAAiD,aAAa;AAC9D;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA,2CAA2C,YAAY;AACvD;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,SAAS;;AAET;AACA;;AAEA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;;AAEL;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,KAAK;;AAEL;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,KAAK;;AAEL;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,KAAK;;AAEL;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,KAAK;;AAEL;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,KAAK;;AAEL;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,KAAK,GAAG;;AAER;AACA;AACA,gCAAgC;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sCAAsC;;AAEtC;;AAEA;;AAEA;AACA;AACA;AACA,YAAY;AACZ;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;;;;;;;;;;ACpQA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA,wBAAwB,OAAO;AAC/B;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,iDAAiD,aAAa;AAC9D;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA,2CAA2C,YAAY;AACvD;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,SAAS;;AAET;AACA;;AAEA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;;AAEL;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;;;;;;;;;;;;;ACtJA;AACA;AACA;;AAEqB;;AAErB;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA,wBAAwB,OAAO;AAC/B;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,iDAAiD,aAAa;AAC9D;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA,2CAA2C,YAAY;AACvD;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,SAAS;;AAET;AACA;;AAEA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;;AAEL;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;;;;;;;;;;;;ACzJA;;;;;;;UCAA;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;;WCtBA;WACA;WACA;WACA;WACA;WACA,iCAAiC,WAAW;WAC5C;WACA;;;;;WCPA;WACA;WACA;WACA;WACA,yCAAyC,wCAAwC;WACjF;WACA;WACA;;;;;WCPA;;;;;WCAA;WACA;WACA;WACA,uDAAuD,iBAAiB;WACxE;WACA,gDAAgD,aAAa;WAC7D;;;;;;;;;;;;;;;;;;ACNA;AACqB;AACO;AACE;AACF;;AAE5B;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA,cAAc;AACd;AACA,cAAc;AACd;AACA,cAAc;AACd;AACA;AACA;AACA,KAAK;;AAEL;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA","sources":["webpack://packforcardgame/./cardGame/easyChallenge.js","webpack://packforcardgame/./cardGame/hardChallenge.js","webpack://packforcardgame/./cardGame/mediumChallenge.js","webpack://packforcardgame/./cardGame/style.css?0f56","webpack://packforcardgame/webpack/bootstrap","webpack://packforcardgame/webpack/runtime/compat get default export","webpack://packforcardgame/webpack/runtime/define property getters","webpack://packforcardgame/webpack/runtime/hasOwnProperty shorthand","webpack://packforcardgame/webpack/runtime/make namespace object","webpack://packforcardgame/./cardGame/startPage.js"],"sourcesContent":["/* eslint-disable eqeqeq */\n/* eslint-disable no-constant-condition */\n/* eslint-disable no-unused-vars */\n/* eslint-disable no-undef */\n\n// import \"./style.css\";\n\nfunction generatingEasyCards(container) {\n    const battleField = document.createElement(\"div\");\n    battleField.classList.add(\"battle-field\");\n\n    const scene = document.createElement(\"div\");\n    scene.classList.add(\"scene\");\n\n    let cardData = [];\n\n    function generateRandomCards() {\n        let cardListRandom = shuffledCardList.sort(() => Math.random() - 0.5);\n        for (let i = 0; i < 3; i++) {\n            cardData.push(cardListRandom[i]);\n        }\n        cardData = cardData.concat(cardData);\n    }\n\n    function createCard(cardData) {\n        const card = document.createElement(\"div\");\n        card.classList.add(\"CARD\");\n\n        const cardFront = document.createElement(\"div\");\n        cardFront.classList.add(\"card-face\", \"card-face-front\");\n        card.append(cardFront);\n\n        const cardBack = document.createElement(\"div\");\n        cardBack.classList.add(\"card-face\", \"card-face-back\");\n        cardBack.style.backgroundImage = `url(\"${cardData.img}\")`;\n        card.append(cardBack);\n\n        card.addEventListener(\"click\", function () {\n            if (\n                window.application.timerPlaying == [] ||\n                window.application.timerPlaying == \"\"\n            ) {\n                alert(\"Запусти таймер, чтобы начать играть!\");\n            } else {\n                card.classList.toggle(\"is-flipped\");\n                card.setAttribute(\"id\", `${cardData.id}`);\n                window.application.pickedCards.push(card.getAttribute(\"id\"));\n\n                if (\n                    window.application.pickedCards[0] ===\n                    window.application.pickedCards[1]\n                ) {\n                    alert(\"Вы выиграли!\");\n                }\n\n                if (window.application.pickedCards.length === 2) {\n                    if (\n                        window.application.pickedCards[0] !==\n                        window.application.pickedCards[1]\n                    ) {\n                        alert(\"Вы проиграли!\");\n                    }\n                }\n                \n\n                if (window.application.pickedCards.length > 6) {\n                    window.application.pickedCards = [];\n                    alert(\"Начни игру заново, ты проиграл!\");\n                }\n            }\n        });\n\n        return card;\n    }\n\n    function renderCards() {\n        cardData.forEach((cardEl) => {\n            const card = createCard(cardEl);\n            scene.append(card);\n        });\n    }\n    generateRandomCards();\n    renderCards();\n\n    scene.querySelectorAll(\".CARD\").forEach((card) => {\n        console.log(card);\n        card.classList.add(\"is-flipped\");\n        setTimeout(() => {\n            card.classList.remove(\"is-flipped\");\n        }, 5000);\n    });\n\n    /* const CARD = document.createElement(\"div\");\n    CARD.classList.add(\"CARD\");\n\n    const cardFront = document.createElement(\"div\");\n    cardFront.classList.add(\"card-face\", \"card-face-front\");\n\n    const cardBack = document.createElement(\"div\");\n    cardBack.classList.add(\"card-face\", \"card-face-back\");\n\n    CARD.addEventListener(\"click\", function () {\n        CARD.classList.toggle(\"is-flipped\");\n    });\n\n    const CARDTWO = document.createElement(\"div\");\n    CARDTWO.classList.add(\"CARD\");\n\n    const CARDTWOFRONT = document.createElement(\"div\");\n    CARDTWOFRONT.classList.add(\"card-face\", \"card-face-front\");\n\n    const CARDTWOBACK = document.createElement(\"div\");\n    CARDTWOBACK.classList.add(\"card-face\", \"card-face-back\");\n\n    CARDTWO.addEventListener(\"click\", function () {\n        CARDTWO.classList.toggle(\"is-flipped\");\n    });\n\n    const CARDTHREE = document.createElement(\"div\");\n    CARDTHREE.classList.add(\"CARD\");\n\n    const CARDTHREEFRONT = document.createElement(\"div\");\n    CARDTHREEFRONT.classList.add(\"card-face\", \"card-face-front\");\n\n    const CARDTHREEBACK = document.createElement(\"div\");\n    CARDTHREEBACK.classList.add(\"card-face\", \"card-face-back\");\n\n    CARDTHREE.addEventListener(\"click\", function () {\n        CARDTHREE.classList.toggle(\"is-flipped\");\n    });\n\n    const CARDFOUR = document.createElement(\"div\");\n    CARDFOUR.classList.add(\"CARD\");\n\n    const CARDFOURFRONT = document.createElement(\"div\");\n    CARDFOURFRONT.classList.add(\"card-face\", \"card-face-front\");\n\n    const CARDFOURBACK = document.createElement(\"div\");\n    CARDFOURBACK.classList.add(\"card-face\", \"card-face-back\");\n\n    CARDFOUR.addEventListener(\"click\", function () {\n        CARDFOUR.classList.toggle(\"is-flipped\");\n    });\n\n    const CARDFIVE = document.createElement(\"div\");\n    CARDFIVE.classList.add(\"CARD\");\n\n    const CARDFIVEFRONT = document.createElement(\"div\");\n    CARDFIVEFRONT.classList.add(\"card-face\", \"card-face-front\");\n\n    const CARDFIVEBACK = document.createElement(\"div\");\n    CARDFIVEBACK.classList.add(\"card-face\", \"card-face-back\");\n\n    CARDFIVE.addEventListener(\"click\", function () {\n        CARDFIVE.classList.toggle(\"is-flipped\");\n    });\n\n    const CARDSIX = document.createElement(\"div\");\n    CARDSIX.classList.add(\"CARD\");\n\n    const CARDSIXFRONT = document.createElement(\"div\");\n    CARDSIXFRONT.classList.add(\"card-face\", \"card-face-front\");\n\n    const CARDSIXBACK = document.createElement(\"div\");\n    CARDSIXBACK.classList.add(\"card-face\", \"card-face-back\");\n\n    CARDSIX.addEventListener(\"click\", function () {\n        CARDSIX.classList.toggle(\"is-flipped\");\n    }); */\n\n    container.appendChild(battleField);\n    battleField.appendChild(scene);\n    /* scene.appendChild(CARD); */\n    /* scene.appendChild(CARDTWO);\n    scene.appendChild(CARDTHREE);\n    scene.appendChild(CARDFOUR);\n    scene.appendChild(CARDFIVE);\n    scene.appendChild(CARDSIX);\n    CARD.appendChild(cardFront);\n    CARD.appendChild(cardBack);\n    CARDTWO.appendChild(CARDTWOFRONT);\n    CARDTWO.appendChild(CARDTWOBACK);\n    CARDTHREE.appendChild(CARDTHREEFRONT);\n    CARDTHREE.appendChild(CARDTHREEBACK);\n    CARDFOUR.appendChild(CARDFOURFRONT);\n    CARDFOUR.appendChild(CARDFOURBACK);\n    CARDFIVE.appendChild(CARDFIVEFRONT);\n    CARDFIVE.appendChild(CARDFIVEBACK);\n    CARDSIX.appendChild(CARDSIXFRONT);\n    CARDSIX.appendChild(CARDSIXBACK); */\n\n    // let randomCards = generateRandomCards();\n\n    //     randomCards\n\n    //     randomCards.forEach(element => {\n    //         element.map((user) => user.name).join(\", \");\n    //         console.log(element);\n    //     });\n}\n\nwindow.application.blocks[\"generateEasyCards\"] = generatingEasyCards;\n\nfunction renderScreenEasyChallenge() {\n    container.textContent = \" \";\n\n    const header = document.createElement(\"div\");\n    header.classList.add(\"header\");\n\n    const buttonTime = document.createElement(\"button\");\n    buttonTime.classList.add(\"btn\", \"timer-button\");\n    buttonTime.textContent = \"старт/сбросить\";\n\n    let secs,\n        now,\n        timer,\n        mins = 0;\n\n    const timerField = document.createElement(\"span\");\n    timerField.classList.add(\"timer-field\");\n    timerField.textContent = \"0:00\";\n\n    function time() {\n        secs = Math.floor((Date.now() - now) / 1000);\n        if (secs === 60) {\n            now = Date.now();\n            mins++;\n        }\n        if (secs < 10) {\n            secs = \"0\" + secs;\n        }\n        timerField.innerHTML = mins + \":\" + secs;\n    }\n\n    buttonTime.onclick = function () {\n        now = Date.now();\n        mins = 0;\n        timer = setInterval(time);\n        window.application.timerPlaying = setInterval(time);\n    };\n\n    const tryAgainButton = document.createElement(\"button\");\n    tryAgainButton.classList.add(\"btn\", \"try-again-button\");\n    tryAgainButton.textContent = \"Начать заново\";\n\n    tryAgainButton.addEventListener(\"click\", () => {\n        window.application.challenge = \"\";\n        window.application.renderScreen(\"start\");\n        window.application.pickedCards = [];\n        window.application.timerPlaying = [];\n    });\n\n    container.appendChild(header);\n    header.appendChild(buttonTime);\n    header.appendChild(timerField);\n    header.appendChild(tryAgainButton);\n\n    window.application.renderBlock(\"generateEasyCards\", container);\n}\n\nwindow.application.screens[\"easy\"] = renderScreenEasyChallenge;\n","/* eslint-disable eqeqeq */\n/* eslint-disable no-unused-vars */\n/* eslint-disable no-undef */\nfunction generatingHardCards(container) {\n    const battleField = document.createElement(\"div\");\n    battleField.classList.add(\"battle-field\");\n\n    const scene = document.createElement(\"div\");\n    scene.classList.add(\"scene\");\n\n    let cardData = [];\n\n    function generateRandomCards() {\n        let cardListRandom = shuffledCardList.sort(() => Math.random() - 0.5);\n        for (let i = 0; i < 9; i++) {\n            cardData.push(cardListRandom[i]);\n        }\n        cardData = cardData.concat(cardData);\n    }\n\n    function createCard(cardData) {\n        const card = document.createElement(\"div\");\n        card.classList.add(\"CARD\");\n\n        const cardFront = document.createElement(\"div\");\n        cardFront.classList.add(\"card-face\", \"card-face-front\");\n        card.append(cardFront);\n\n        const cardBack = document.createElement(\"div\");\n        cardBack.classList.add(\"card-face\", \"card-face-back\");\n        cardBack.style.backgroundImage = `url(\"${cardData.img}\")`;\n        card.append(cardBack);\n\n        card.addEventListener(\"click\", function () {\n            if (\n                window.application.timerPlaying == [] ||\n                window.application.timerPlaying == \"\"\n            ) {\n                alert(\"Запусти таймер, чтобы начать играть!\");\n            } else {\n                card.classList.toggle(\"is-flipped\");\n                card.setAttribute(\"id\", `${cardData.id}`);\n                window.application.pickedCards.push(card.getAttribute(\"id\"));\n\n                if (\n                    window.application.pickedCards[0] ===\n                    window.application.pickedCards[1]\n                ) {\n                    alert(\"Вы выиграли!\");\n                }\n\n                if (window.application.pickedCards.length === 2) {\n                    if (\n                        window.application.pickedCards[0] !==\n                        window.application.pickedCards[1]\n                    ) {\n                        alert(\"Вы проиграли!\");\n                    }\n                }\n\n                if (window.application.pickedCards.length > 18) {\n                    window.application.pickedCards = [];\n                    alert(\"Начни игру заново, ты проиграл!\");\n                }\n            }\n        });\n\n        return card;\n    }\n\n    function renderCards() {\n        cardData.forEach((cardEl) => {\n            const card = createCard(cardEl);\n            scene.append(card);\n        });\n    }\n    generateRandomCards();\n    renderCards();\n\n    scene.querySelectorAll(\".CARD\").forEach((card) => {\n        console.log(card);\n        card.classList.add(\"is-flipped\");\n        setTimeout(() => {\n            card.classList.remove(\"is-flipped\");\n        }, 5000);\n    });\n\n    container.appendChild(battleField);\n    battleField.appendChild(scene);\n}\n\nwindow.application.blocks[\"generateHardCards\"] = generatingHardCards;\n\nfunction renderScreenHardChallenge() {\n    container.textContent = \" \";\n\n    const header = document.createElement(\"div\");\n    header.classList.add(\"header\");\n\n    const buttonTime = document.createElement(\"button\");\n    buttonTime.classList.add(\"btn\", \"timer-button\");\n    buttonTime.textContent = \"старт/сбросить\";\n\n    let secs,\n        now,\n        timer,\n        mins = 0;\n\n    const timerField = document.createElement(\"span\");\n    timerField.classList.add(\"timer-field\");\n    timerField.textContent = \"0:00\";\n\n    function time() {\n        secs = Math.floor((Date.now() - now) / 1000);\n        if (secs === 60) {\n            now = Date.now();\n            mins++;\n        }\n        if (secs < 10) {\n            secs = \"0\" + secs;\n        }\n        timerField.innerHTML = mins + \":\" + secs;\n    }\n\n    buttonTime.onclick = function () {\n        now = Date.now();\n        mins = 0;\n        timer = setInterval(time);\n        window.application.timerPlaying = setInterval(time);\n    };\n\n    const tryAgainButton = document.createElement(\"button\");\n    tryAgainButton.classList.add(\"btn\", \"try-again-button\");\n    tryAgainButton.textContent = \"Начать заново\";\n\n    tryAgainButton.addEventListener(\"click\", () => {\n        window.application.challenge = \"\";\n        window.application.renderScreen(\"start\");\n        window.application.pickedCards = [];\n        window.application.timerPlaying = [];\n    });\n\n    container.appendChild(header);\n    header.appendChild(buttonTime);\n    header.appendChild(timerField);\n    header.appendChild(tryAgainButton);\n\n    window.application.renderBlock(\"generateHardCards\", container);\n}\n\nwindow.application.screens[\"hard\"] = renderScreenHardChallenge;\n","/* eslint-disable eqeqeq */\n/* eslint-disable no-undef */\n/* eslint-disable no-unused-vars */\n\nimport \"./style.css\";\n\nfunction generatingMediumCards(container) {\n    const battleField = document.createElement(\"div\");\n    battleField.classList.add(\"battle-field\");\n\n    const scene = document.createElement(\"div\");\n    scene.classList.add(\"scene\");\n\n    let cardData = [];\n\n    function generateRandomCards() {\n        let cardListRandom = shuffledCardList.sort(() => Math.random() - 0.5);\n        for (let i = 0; i < 6; i++) {\n            cardData.push(cardListRandom[i]);\n        }\n        cardData = cardData.concat(cardData);\n    }\n\n    function createCard(cardData) {\n        const card = document.createElement(\"div\");\n        card.classList.add(\"CARD\");\n\n        const cardFront = document.createElement(\"div\");\n        cardFront.classList.add(\"card-face\", \"card-face-front\");\n        card.append(cardFront);\n\n        const cardBack = document.createElement(\"div\");\n        cardBack.classList.add(\"card-face\", \"card-face-back\");\n        cardBack.style.backgroundImage = `url(\"${cardData.img}\")`;\n        card.append(cardBack);\n\n        card.addEventListener(\"click\", function () {\n            if (\n                window.application.timerPlaying == [] ||\n                window.application.timerPlaying == \"\"\n            ) {\n                alert(\"Запусти таймер, чтобы начать играть!\");\n            } else {\n                card.classList.toggle(\"is-flipped\");\n                card.setAttribute(\"id\", `${cardData.id}`);\n                window.application.pickedCards.push(card.getAttribute(\"id\"));\n\n                if (\n                    window.application.pickedCards[0] ===\n                    window.application.pickedCards[1]\n                ) {\n                    alert(\"Вы выиграли!\");\n                }\n\n                if (window.application.pickedCards.length === 2) {\n                    if (\n                        window.application.pickedCards[0] !==\n                        window.application.pickedCards[1]\n                    ) {\n                        alert(\"Вы проиграли!\");\n                    }\n                }\n\n                if (window.application.pickedCards.length > 12) {\n                    window.application.pickedCards = [];\n                    alert(\"Начни игру заново, ты проиграл!\");\n                }\n            }\n        });\n\n        return card;\n    }\n\n    function renderCards() {\n        cardData.forEach((cardEl) => {\n            const card = createCard(cardEl);\n            scene.append(card);\n        });\n    }\n    generateRandomCards();\n    renderCards();\n\n    scene.querySelectorAll(\".CARD\").forEach((card) => {\n        console.log(card);\n        card.classList.add(\"is-flipped\");\n        setTimeout(() => {\n            card.classList.remove(\"is-flipped\");\n        }, 5000);\n    });\n\n    container.appendChild(battleField);\n    battleField.appendChild(scene);\n}\n\nwindow.application.blocks[\"generateMediumCards\"] = generatingMediumCards;\n\nfunction renderScreenMediumChallenge() {\n    container.textContent = \" \";\n\n    const header = document.createElement(\"div\");\n    header.classList.add(\"header\");\n\n    const buttonTime = document.createElement(\"button\");\n    buttonTime.classList.add(\"btn\", \"timer-button\");\n    buttonTime.textContent = \"старт/сбросить\";\n\n    let secs,\n        now,\n        timer,\n        mins = 0;\n\n    const timerField = document.createElement(\"span\");\n    timerField.classList.add(\"timer-field\");\n    timerField.textContent = \"0:00\";\n\n    function time() {\n        secs = Math.floor((Date.now() - now) / 1000);\n        if (secs === 60) {\n            now = Date.now();\n            mins++;\n        }\n        if (secs < 10) {\n            secs = \"0\" + secs;\n        }\n        timerField.innerHTML = mins + \":\" + secs;\n    }\n\n    buttonTime.onclick = function () {\n        now = Date.now();\n        mins = 0;\n        timer = setInterval(time);\n        window.application.timerPlaying = setInterval(time);\n    };\n\n    const tryAgainButton = document.createElement(\"button\");\n    tryAgainButton.classList.add(\"btn\", \"try-again-button\");\n    tryAgainButton.textContent = \"Начать заново\";\n\n    tryAgainButton.addEventListener(\"click\", () => {\n        window.application.challenge = \"\";\n        window.application.renderScreen(\"start\");\n        window.application.pickedCards = [];\n        window.application.timerPlaying = [];\n    });\n\n    container.appendChild(header);\n    header.appendChild(buttonTime);\n    header.appendChild(timerField);\n    header.appendChild(tryAgainButton);\n\n    window.application.renderBlock(\"generateMediumCards\", container);\n}\n\nwindow.application.screens[\"medium\"] = renderScreenMediumChallenge;\n","// extracted by mini-css-extract-plugin\nexport {};","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","/* eslint-disable no-undef */\nimport \"./style.css\";\nimport \"./easyChallenge.js\";\nimport \"./mediumChallenge.js\";\nimport \"./hardChallenge.js\";\n\nfunction renderStartButton(container) {\n    const startButton = document.createElement(\"button\");\n\n    startButton.textContent = \"Старт\";\n    startButton.classList.add(\"start-button\", \"btn\");\n\n    startButton.addEventListener(\"click\", () => {\n        if (window.application.challenge === \"\") {\n            alert(\"Выберите уровень сложности!\");\n        } else {\n            if (window.application.challenge === \"easy\") {\n                window.application.renderScreen(\"easy\");\n            } else if (window.application.challenge === \"medium\") {\n                window.application.renderScreen(\"medium\");\n            } else if (window.application.challenge === \"hard\") {\n                window.application.renderScreen(\"hard\");\n            } else {\n                console.log(`Ошибка, обновите страницу!`);\n            }\n        }\n    });\n\n    container.appendChild(startButton);\n}\n\nwindow.application.blocks[\"StartButton\"] = renderStartButton;\n\nfunction renderStartScreen() {\n    container.textContent = \"\";\n\n    const menu = document.createElement(\"div\");\n    menu.classList.add(\"menu\");\n\n    const title = document.createElement(\"h1\");\n    title.classList.add(\"title\");\n    title.textContent = \"Выбери сложность\";\n\n    const pickerChalenge = document.createElement(\"div\");\n    pickerChalenge.classList.add(\"picker-challenge\");\n\n    const buttonFirst = document.createElement(\"button\");\n    buttonFirst.classList.add(\"button\", \"FirstChallenge\");\n    buttonFirst.textContent = \"1\";\n\n    buttonFirst.addEventListener(\"click\", () => {\n        window.application.challenge = \"easy\";\n        buttonFirst.classList.remove(\"button\");\n        buttonFirst.classList.add(\"selected\");\n\n        if (\n            buttonSecond.classList.contains(\"selected\") ||\n            buttonThird.classList.contains(\"selected\")\n        ) {\n            buttonSecond.classList.remove(\"selected\");\n            buttonThird.classList.remove(\"selected\");\n            buttonSecond.classList.add(\"button\");\n            buttonThird.classList.add(\"button\");\n        }\n    });\n\n    const buttonSecond = document.createElement(\"button\");\n    buttonSecond.classList.add(\"button\", \"SecondChallenge\");\n    buttonSecond.textContent = \"2\";\n\n    buttonSecond.addEventListener(\"click\", () => {\n        window.application.challenge = \"medium\";\n        buttonSecond.classList.remove(\"button\");\n        buttonSecond.classList.add(\"selected\");\n\n        if (\n            buttonFirst.classList.contains(\"selected\") ||\n            buttonThird.classList.contains(\"selected\")\n        ) {\n            buttonFirst.classList.remove(\"selected\");\n            buttonThird.classList.remove(\"selected\");\n            buttonFirst.classList.add(\"button\");\n            buttonThird.classList.add(\"button\");\n        }\n    });\n\n    const buttonThird = document.createElement(\"button\");\n    buttonThird.classList.add(\"button\", \"ThirdChallenge\");\n    buttonThird.textContent = \"3\";\n\n    buttonThird.addEventListener(\"click\", () => {\n        window.application.challenge = \"hard\";\n        buttonThird.classList.remove(\"button\");\n        buttonThird.classList.add(\"selected\");\n\n        if (\n            buttonFirst.classList.contains(\"selected\") ||\n            buttonThird.classList.contains(\"selected\")\n        ) {\n            buttonFirst.classList.remove(\"selected\");\n            buttonSecond.classList.remove(\"selected\");\n            buttonFirst.classList.add(\"button\");\n            buttonSecond.classList.add(\"button\");\n        }\n    });\n\n    container.appendChild(menu);\n    menu.appendChild(title);\n    menu.appendChild(pickerChalenge);\n    pickerChalenge.appendChild(buttonFirst);\n    pickerChalenge.appendChild(buttonSecond);\n    pickerChalenge.appendChild(buttonThird);\n\n    window.application.renderBlock(\"StartButton\", menu);\n}\n\nwindow.application.screens[\"start\"] = renderStartScreen;\n\nwindow.application.renderScreen(\"start\");\n"],"names":[],"sourceRoot":""}